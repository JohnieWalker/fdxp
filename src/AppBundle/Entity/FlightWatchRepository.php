<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;
use AppBundle\Doctrine\Walker\SortableNullsWalker;

/**
 * FlightWatchRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FlightWatchRepository extends EntityRepository
{
    public function findByDeskWithInfo($desk, $dp = NULL) {

        $qb = $this->createQueryBuilder('f');

        $qb
            ->addSelect('i')
            ->join('f.info', 'i')
            ->where('f.completed is null')
            ->andWhere('i.pointName not like :pointName')
            ->setParameter('pointName', 'EXP%');

        if($desk != 'all'){
            $qb
                ->andWhere('f.desk = :desk')
                ->setParameter('desk', $desk);
        }

        if($dp){
            $qb
                ->andWhere('f.erd IS NOT NULL');
        }

        if($dp){
            $qb
                ->addOrderBy('f.dpTime', 'ASC');
        }

        $qb
            ->addOrderBy('f.flightDate', 'ASC')
            ->addOrderBy('f.std', 'ASC');



        return $qb
            ->getQuery()
            ->setHint(Query::HINT_INCLUDE_META_COLUMNS, true)
            ->setHint(Query::HINT_CUSTOM_OUTPUT_WALKER, 'AppBundle\Doctrine\Walker\SortableNullsWalker')
            ->setHint('SortableNullsWalker.fields', array(
                'dpTime' => SortableNullsWalker::NULLS_LAST
            ))
            ->getResult();

    }

    public function findAllWithInfo() {

        return $this->createQueryBuilder('f')
            ->addSelect('i')
            ->join('f.info', 'i')
            ->where('f.completed is null')
            ->andWhere('i.pointName not like :pointName')
            ->setParameter('pointName', 'EXP%')
            ->orderBy('f.flightDate', 'ASC')
            ->addOrderBy('f.std', 'ASC')
            ->getQuery()
            ->setHint(Query::HINT_INCLUDE_META_COLUMNS, true)
            ->getArrayResult();

    }

    //TODO : Fix, this is ugly.
    public function findCompletedByDate($date){

        return $this->createQueryBuilder('f')
            ->addSelect('i')
            ->join('f.info', 'i')
            ->where('f.completed = 1')
            ->andWhere('f.flightDate = :date')
            ->setParameter('date', $date)
            ->getQuery()
            ->setHint(Query::HINT_INCLUDE_META_COLUMNS, true)
            ->getResult();

    }

    public function findComingUpDP(){

        return $this->createQueryBuilder('f')
            ->addSelect('i')
            ->join('f.info', 'i')
            ->where('f.takeOffTime IS NOT NULL')
            ->andWhere('f.completed is NULL')
            ->andWhere('i.pointType = :pointType')
            ->setParameter('pointType', 'dp')
            ->andWhere('i.eto > :time')
            ->setParameter('time', date("Y-m-d H:i:s"))
            ->getQuery()
            ->getArrayResult();

    }
}
